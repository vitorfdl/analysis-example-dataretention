"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.channels = void 0;
const socket_io_client_1 = __importDefault(require("socket.io-client"));
const config_1 = __importDefault(require("../config"));
const regions_1 = __importDefault(require("../regions"));
/**
 * TagoIO Socket Connection
 * In some cases you will should emit channels to subscribe/unsubscribe
 * example:
 *  - socket.emit('attach', 'bucket', '5d30e5f8577736001b1a5e11');
 *  - socket.emit('unattach', 'bucket', '5d30e5f8577736001b1a5e11');
 * @internal
 * @param params TagoIO Token and Region
 * @param socketIOExtraOptions SocketIO Extra Options
 */
function apiSocket(params, socketIOExtraOptions = {}) {
    const socket = socket_io_client_1.default.connect(regions_1.default(params.region).realtime, Object.assign(Object.assign(Object.assign({}, config_1.default.socketOpts), { query: {
            token: params.token,
        } }), socketIOExtraOptions));
    return socket;
}
/**
 * @internal
 */
const channels = {
    notification: "notification::data",
    analysisConsole: "analysis::console",
    analysisTrigger: "analysis::trigger",
    bucketData: "bucket::data",
};
exports.channels = channels;
exports.default = apiSocket;
//# sourceMappingURL=apiSocket.js.map