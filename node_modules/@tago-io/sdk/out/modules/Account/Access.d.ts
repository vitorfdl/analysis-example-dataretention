import { GenericID } from "../../common/common.types";
import TagoIOModule, { GenericModuleParams } from "../../common/TagoIOModule";
import { AccessCreateInfo, AccessInfo, AccessQuery } from "./access.types";
declare class Access extends TagoIOModule<GenericModuleParams> {
    /**
     * Retrieves a list with all Access rules from account
     * @default
     * ```json
     * queryObj: {
     *   page: 1,
     *   fields: ["id", "name", "tags"],
     *   filter: {},
     *   amount: 20,
     *   orderBy: "name,asc",
     * }
     * ```
     * @param queryObj Search query params
     */
    list(queryObj?: AccessQuery): Promise<AccessInfo[]>;
    /**
     * Create a new access policy
     * @param accessObj
     */
    create(accessObj: AccessCreateInfo): Promise<{
        am_id: GenericID;
    }>;
    /**
     * Edit access policy
     * @param accessID Access policy identification
     * @param accessObj Access policy info to change
     */
    edit(accessID: GenericID, accessObj: Partial<AccessInfo>): Promise<string>;
    /**
     * Delete account policy
     * @param accessID Access policy identification
     */
    delete(accessID: GenericID): Promise<string>;
    /**
     * Get account policy info
     * @param accessID Access policy identification
     */
    info(accessID: GenericID): Promise<AccessInfo>;
}
export default Access;
//# sourceMappingURL=Access.d.ts.map