import { GenericID } from "../../common/common.types";
import TagoIOModule, { GenericModuleParams } from "../../common/TagoIOModule";
import { ConnectorCreateInfo, ConnectorInfo, ConnectorQuery } from "./integration.connectors.types";
declare class Connectors extends TagoIOModule<GenericModuleParams> {
    /**
     * Retrieves a list with all connectors from account
     * @default
     * ```json
     * queryObj: {
     *   page: 1,
     *   fields: ["id", "name"],
     *   filter: {},
     *   amount: 20,
     *   orderBy: "name,asc",
     * }
     * ```
     * @param queryObj Search query params
     */
    list(queryObj?: ConnectorQuery): Promise<ConnectorInfo[]>;
    /**
     * Get Info of the Connector
     * @param connectorID Connector identification
     * @param fields Fields to fetch.
     */
    info(connectorID: GenericID, fields?: string[]): Promise<ConnectorInfo>;
    /**
     * Generates and retrieves a new connector from the account
     * @param connectorObj Object data to create new Connector
     */
    create(connectorObj: ConnectorCreateInfo): Promise<{
        connector: GenericID;
    }>;
    /**
     * Modify any property of the connector
     * @param connectorID Connector identification
     * @param connectorObj Object data to create new Connector
     */
    edit(connectorID: GenericID, connectorObj: Partial<ConnectorCreateInfo>): Promise<string>;
}
export default Connectors;
//# sourceMappingURL=Integration.Connectors.d.ts.map