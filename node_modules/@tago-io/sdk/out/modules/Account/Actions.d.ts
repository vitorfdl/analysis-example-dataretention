import { GenericID } from "../../common/common.types";
import TagoIOModule, { GenericModuleParams } from "../../common/TagoIOModule";
import { ActionCreateInfo, ActionInfo, ActionQuery } from "./actions.types";
declare class Actions extends TagoIOModule<GenericModuleParams> {
    /**
     * Retrieves a list with all actions from the account
     * @default
     * ```json
     * queryObj: {
     *   page: 1,
     *   fields: ["id", "name"],
     *   filter: {},
     *   amount: 20,
     *   orderBy: "name,asc",
     * }
     * ```
     * @param queryObj Search query params
     */
    list(queryObj?: ActionQuery): Promise<ActionInfo[]>;
    /**
     * Generates and retrieves a new action from the account
     * @param actionObj Object data to create new TagoIO Action
     */
    create(actionObj: ActionCreateInfo): Promise<{
        action: string;
    }>;
    /**
     * Modify any property of the action.
     * @param actionID Action ID
     * @param actionObj Action Object with data to be replaced
     */
    edit(actionID: GenericID, actionObj: Partial<ActionCreateInfo>): Promise<string>;
    /**
     * Deletes an action from the account
     * @param actionID Action ID
     */
    delete(actionID: GenericID): Promise<string>;
    /**
     * Gets information about the action
     * @param actionID Action ID
     */
    info(actionID: GenericID): Promise<ActionInfo>;
}
export default Actions;
//# sourceMappingURL=Actions.d.ts.map