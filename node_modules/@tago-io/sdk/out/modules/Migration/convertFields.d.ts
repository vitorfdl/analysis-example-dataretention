export declare enum InputFormField {
    "Text" = "text",
    "Address" = "address",
    "Barcode" = "barcode",
    "Calendar" = "calendar",
    "Capture user" = "user",
    "Checkbox" = "checkbox",
    "Clock Set" = "clock-set",
    "Device" = "device",
    "Dropdown" = "dropdown",
    "Dropdown Multiple" = "dropdown-multi",
    "Email" = "email",
    "File Upload" = "upload",
    "Filtered variables" = "filtered",
    "Hidden" = "hidden",
    "Image / Video Select" = "image-select",
    "Incremental Step" = "incremental-step",
    "Number" = "number",
    "Password" = "password",
    "QR Code" = "qrcode",
    "Radio" = "radio",
    "Validation" = "validation"
}
export declare function convertSubmitButton(oldDisplay: any, runAnalysis: string): Object;
export declare function convertFormField(field: any): any;
export declare function convertVisualField(field: any): any;
/**
 * Convert text fields to new widget format
 */
export declare function convertFieldText(field: any): any;
/**
 * Convert address fields to new widget format
 */
export declare function convertFieldAddress(field: any, showMap?: any): any;
/**
 * Convert barcode fields to new widget format
 */
export declare function convertFieldBarCode(field: any): any;
/**
 * Convert calendar fields to new widget format
 */
export declare function convertFieldCalendar(field: any): any;
/**
 * Convert calendar fields to new widget format
 */
export declare function convertFieldCheckbox(field: any): any;
/**
 * Convert clock set fields to new widget format
 */
export declare function convertFieldClockSet(field: any): any;
/**
 * Convert device fields to new widget format
 */
export declare function convertFieldDevice(field: any): any;
/**
 * Convert dropdown field to new widget format
 */
export declare function convertFieldDropdown(field: any): any;
/**
 * Convert dropdown multiples field to new widget format
 */
export declare function convertFieldDropdownMultiple(field: any): any;
/**
 * Convert email field to new widget format
 */
export declare function convertFieldEmail(field: any): any;
/**
 * Convert file upload field to new widget format
 */
export declare function convertFieldFileUpload(field: any): any;
/**
 * Convert filtered variables field to new widget format
 */
export declare function convertFieldFilteredVariables(field: any): any;
/**
 * Convert hidden field to new widget format
 */
export declare function convertFieldHidden(field: any): any;
/**
 * Convert Image / Video select field to new widget format
 */
export declare function convertFieldImageVideoSelect(field: any): any;
/**
 * Convert Incremental steps field for new widget format
 */
export declare function convertFieldIncrementalSteps(field: any): any;
/**
 * Convert Number field to new widget format
 */
export declare function convertFieldNumber(field: any): any;
/**
 * Convert Password field to new widget format
 */
export declare function convertFieldPassword(field: any): any;
/**
 * Convert QR Code field to new widget format
 */
export declare function convertFieldQrCode(field: any): any;
/**
 * Convert Radio field to new widget format
 */
export declare function convertFieldRadio(field: any): any;
/**
 * Convert Validation field to new widget format
 */
export declare function convertFieldValidation(field: any): any;
/**
 * Convert Capture user field to new widget format
 */
export declare function convertFieldCaptureUser(field: any): any;
/**
 * Convert fields
 */
export declare function convertField(field: any, showMap?: any): any;
//# sourceMappingURL=convertFields.d.ts.map