"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isOldStructure = exports.convert = void 0;
const common_1 = require("./common/");
function convert(oldWidget) {
    var _a, _b, _c, _d, _e, _f, _g, _h;
    const oldDisplay = oldWidget.display || {};
    const newStructure = {
        dashboard: oldWidget.dashboard,
        display: {
            allow_add: false,
            allow_edit: false,
            allow_embed_url: false,
            allow_label: false,
            allow_pin_color: false,
            allow_remove: false,
            allow_zoom: false,
            aspect_ratio: (oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.aspect_ratio) || [],
            background: {},
            background_path: (oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.background_path) || "",
            background_type: (oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.background_type) || "",
            header_buttons: oldDisplay.header_buttons || [],
            help: oldDisplay.help || "",
            max_points: 300,
            object_fit: "contain",
            occupy_whole_widget: false,
            pin_size: "big",
            show_last_update: false,
            theme: {
                color: {
                    background: null,
                    button_background: null,
                    button_icon: null,
                    header: null,
                    infobox_background: null,
                    infobox_text: null,
                },
            },
            title_window: "",
            variables: [],
        },
        id: oldWidget.id,
        label: oldWidget.label,
        realtime: null,
        type: "compose",
    };
    if (Array.isArray(oldWidget.data)) {
        newStructure.data = oldWidget.data; // transfers the .data property
        newStructure.display.variables = []; // creates the variable array
        for (const item of oldWidget.data) {
            if (item.is_hide) {
                // is_hide items are not visible in the columns, so we cannot
                // put them in the variables array
                continue;
            }
            for (const variable of item.variables) {
                const key = `${item.origin}${variable}`;
                const alias = (_a = oldDisplay.vars_labels) === null || _a === void 0 ? void 0 : _a[key];
                const numberFormat = (_b = oldDisplay.vars_format) === null || _b === void 0 ? void 0 : _b[key];
                const url = ((_d = (_c = oldDisplay.vars_url) === null || _c === void 0 ? void 0 : _c[key]) === null || _d === void 0 ? void 0 : _d.url) || null;
                const urlLabel = ((_f = (_e = oldDisplay.vars_url) === null || _e === void 0 ? void 0 : _e[key]) === null || _f === void 0 ? void 0 : _f.alias) || null;
                const embed = ((_g = oldDisplay.vars_iframe) === null || _g === void 0 ? void 0 : _g[key]) || null;
                const colorConditions = [];
                const icon = ((_h = oldDisplay.vars_icons) === null || _h === void 0 ? void 0 : _h[key]) || null;
                if (icon && (icon === null || icon === void 0 ? void 0 : icon.url)) {
                    colorConditions.push({
                        color: (icon === null || icon === void 0 ? void 0 : icon.color) ? icon.color : "rgb(49, 60, 70)",
                        condition: "*",
                        url: icon.url,
                    });
                }
                newStructure.display.variables.push(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({ color_conditions: colorConditions, origin: item.origin, override_color: false, variable }, (alias ? { alias } : {})), (numberFormat ? { number_format: numberFormat } : {})), (url ? { external_url: url } : {})), (urlLabel ? { external_url_label: urlLabel } : {})), (embed ? { embed: common_1.removeHttpFromURL(embed) } : {})));
            }
        }
    }
    return newStructure;
}
exports.convert = convert;
function isOldStructure(widget) {
    var _a, _b, _c, _d, _e, _f, _g;
    const isOld = !!(((_a = widget === null || widget === void 0 ? void 0 : widget.display) === null || _a === void 0 ? void 0 : _a.vars_labels) ||
        ((_b = widget === null || widget === void 0 ? void 0 : widget.display) === null || _b === void 0 ? void 0 : _b.vars_format) ||
        ((_c = widget === null || widget === void 0 ? void 0 : widget.display) === null || _c === void 0 ? void 0 : _c.vars_formula) ||
        ((_d = widget === null || widget === void 0 ? void 0 : widget.display) === null || _d === void 0 ? void 0 : _d.numberformat) ||
        ((_e = widget === null || widget === void 0 ? void 0 : widget.display) === null || _e === void 0 ? void 0 : _e.column_alignments) ||
        ((_f = widget === null || widget === void 0 ? void 0 : widget.display) === null || _f === void 0 ? void 0 : _f.hide_variables) !== undefined ||
        ((_g = widget === null || widget === void 0 ? void 0 : widget.display) === null || _g === void 0 ? void 0 : _g.watermark) !== undefined);
    return isOld;
}
exports.isOldStructure = isOldStructure;
//# sourceMappingURL=compose.js.map