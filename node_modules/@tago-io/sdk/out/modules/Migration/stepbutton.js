"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isOldStructure = exports.convert = void 0;
function convert(oldWidget) {
    var _a, _b, _c, _d, _e;
    const oldDisplay = oldWidget.display || {};
    const newStructure = {
        dashboard: oldWidget.dashboard,
        display: {
            alias: "",
            header_buttons: oldDisplay.header_buttons || [],
            help: oldDisplay.help || "",
            hour_visualization: (oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.clock_visualization) || "",
            limit: {
                enabled: !!(oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.enable_limit),
                maximum: (oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.maximum) || 100,
                minimum: (oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.minimum) || 0,
            },
            number_format: {
                decimals: -1,
                show_thousand: false,
            },
            show_unit: !!(oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.show_unit),
            show_variables: !(oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.hide_variables),
            step_value: (oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.increment) || 1,
            theme: {
                color: {
                    background: null,
                    button: oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.conditions_button,
                    text: null,
                    value: oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.conditions_text,
                },
            },
            type: oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.input_type,
            unit: (oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.unit) || "",
        },
        id: oldWidget.id,
        label: oldWidget.label,
        realtime: null,
        type: "step_button",
    };
    if (Array.isArray(oldWidget.data)) {
        for (const item of oldWidget.data) {
            if (item === null || item === void 0 ? void 0 : item.is_hide) {
                continue;
            }
            for (const variable of item.variables) {
                const key = `${item === null || item === void 0 ? void 0 : item.origin}${variable}`;
                if ((_a = oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.vars_format) === null || _a === void 0 ? void 0 : _a[key]) {
                    newStructure.display.number_format = (_b = oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.vars_format) === null || _b === void 0 ? void 0 : _b[key];
                }
                if (((_c = oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.vars_labels) === null || _c === void 0 ? void 0 : _c[key]) && ((_d = oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.vars_labels) === null || _d === void 0 ? void 0 : _d[key]) !== variable) {
                    newStructure.display.alias = (_e = oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.vars_labels) === null || _e === void 0 ? void 0 : _e[key];
                }
            }
        }
        newStructure.data = oldWidget.data;
    }
    return newStructure;
}
exports.convert = convert;
function isOldStructure(widget) {
    var _a, _b, _c, _d;
    const isOld = !!(((_a = widget === null || widget === void 0 ? void 0 : widget.display) === null || _a === void 0 ? void 0 : _a.input_type) ||
        ((_b = widget === null || widget === void 0 ? void 0 : widget.display) === null || _b === void 0 ? void 0 : _b.vars_labels) ||
        ((_c = widget === null || widget === void 0 ? void 0 : widget.display) === null || _c === void 0 ? void 0 : _c.vars_format) ||
        ((_d = widget === null || widget === void 0 ? void 0 : widget.display) === null || _d === void 0 ? void 0 : _d.conditions_button));
    return isOld;
}
exports.isOldStructure = isOldStructure;
//# sourceMappingURL=stepbutton.js.map