"use strict";
// ? ==================================== (c) TagoIO ====================================
// * What is this file?
//     Converts the OLD RANGE to BLUEPRINT RANGE
// ? ====================================================================================
Object.defineProperty(exports, "__esModule", { value: true });
const isNumber = (s) => {
    const str = ("" + s).trim();
    if (str.length === 0) {
        return false;
    }
    return !isNaN(+str);
};
function convertRange(oldWidgetDisplay) {
    var _a;
    const range = {};
    if (oldWidgetDisplay.range_limit === "metadata") {
        range.type = "metadata";
        if (oldWidgetDisplay.range_limit_metadata === "custom") {
            range.metadata_origin = "variable";
            const oldVariable = oldWidgetDisplay.range_limit_variable;
            const variable = {
                origin: ((_a = oldVariable.origin) === null || _a === void 0 ? void 0 : _a.id) || (oldVariable === null || oldVariable === void 0 ? void 0 : oldVariable.origin),
                variable: oldVariable === null || oldVariable === void 0 ? void 0 : oldVariable.variable,
            };
            range.variable = variable;
        }
        else {
            range.metadata_origin = oldWidgetDisplay.range_limit_metadata === "origin" ? "original" : "formula";
        }
    }
    else {
        range.type = "minmax";
        const min = oldWidgetDisplay.minimum;
        const max = oldWidgetDisplay.maximum;
        range.minimum = min !== undefined && isNumber(min) ? Number(min) : 0;
        range.maximum = max !== undefined && isNumber(max) ? Number(max) : 100;
    }
    return range;
}
exports.default = convertRange;
//# sourceMappingURL=convertRange.js.map