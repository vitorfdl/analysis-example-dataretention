"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isOldStructure = exports.convert = void 0;
function convertSource(oldDisplay) {
    const { type_image } = oldDisplay;
    if (type_image === "static") {
        return {
            static_image: (oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.static_image) || (oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.static_media),
            type: "static",
        };
    }
    const oldConditions = (oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.conditions) || [];
    return {
        conditions: oldConditions.map((e) => ({
            condition: e === null || e === void 0 ? void 0 : e.condition,
            url: (e === null || e === void 0 ? void 0 : e.image) || (e === null || e === void 0 ? void 0 : e.media_url),
            value: e === null || e === void 0 ? void 0 : e.value,
        })),
        type: "conditional",
    };
}
/**
 * Takes the OLD widget and returns the NEW structure.
 */
function convert(oldWidget) {
    const oldDisplay = oldWidget.display || {};
    const newStructure = {
        dashboard: oldWidget.dashboard,
        display: {
            allow_zoom: false,
            formula: {
                enable: false,
                formula_type: "fixed",
                unit_type: "origin",
                value: "",
            },
            header_buttons: oldDisplay.header_buttons || [],
            help: oldDisplay.help || "",
            object_fit: "contain",
            occupy_whole_widget: false,
            show_zoom_buttons: false,
            source: convertSource(oldDisplay),
            theme: {
                color: {
                    background: null,
                    header: null,
                },
            },
        },
        id: oldWidget.id,
        label: oldWidget.label,
        realtime: null,
        type: "image",
    };
    if (Array.isArray(oldWidget.data)) {
        newStructure.data = oldWidget.data;
    }
    return newStructure;
}
exports.convert = convert;
function isOldStructure(widget) {
    var _a, _b, _c, _d, _e;
    const isOld = !!(((_a = widget === null || widget === void 0 ? void 0 : widget.display) === null || _a === void 0 ? void 0 : _a.type_media) ||
        ((_b = widget === null || widget === void 0 ? void 0 : widget.display) === null || _b === void 0 ? void 0 : _b.type_image) ||
        ((_c = widget === null || widget === void 0 ? void 0 : widget.display) === null || _c === void 0 ? void 0 : _c.static_media) ||
        ((_d = widget === null || widget === void 0 ? void 0 : widget.display) === null || _d === void 0 ? void 0 : _d.static_image) ||
        ((_e = widget === null || widget === void 0 ? void 0 : widget.display) === null || _e === void 0 ? void 0 : _e.conditions));
    return isOld;
}
exports.isOldStructure = isOldStructure;
//# sourceMappingURL=image.js.map