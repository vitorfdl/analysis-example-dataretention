"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isOldStructure = exports.convert = void 0;
function convertState(oldState) {
    const newState = Object.assign(Object.assign({}, oldState), { type: (oldState === null || oldState === void 0 ? void 0 : oldState.type) || "text", color: (oldState === null || oldState === void 0 ? void 0 : oldState.text_color) || "" });
    delete newState.text_color;
    return newState;
}
function convert(oldWidget) {
    var _a, _b, _c;
    const oldDisplay = oldWidget.display || {};
    const newStructure = {
        analysis_run: oldWidget === null || oldWidget === void 0 ? void 0 : oldWidget.analysis_run,
        dashboard: oldWidget.dashboard,
        display: {
            alias: "",
            button_type: (oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.button_type) === "bi-stable" ? "bistable" : "monostable",
            header_buttons: oldDisplay.header_buttons || [],
            help: oldDisplay.help || "",
            show_variables: !(oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.hide_variables),
            state_one: convertState(oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.state_one),
            state_two: convertState(oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.state_two),
            theme: {
                color: {
                    background: null,
                    text: null,
                },
            },
        },
        id: oldWidget.id,
        label: oldWidget.label,
        realtime: null,
        type: "push_button",
    };
    if (Array.isArray(oldWidget.data)) {
        for (const item of oldWidget.data) {
            if (item === null || item === void 0 ? void 0 : item.is_hide) {
                continue;
            }
            for (const variable of item.variables) {
                const key = `${item === null || item === void 0 ? void 0 : item.origin}${variable}`;
                if (((_a = oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.vars_labels) === null || _a === void 0 ? void 0 : _a[key]) && ((_b = oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.vars_labels) === null || _b === void 0 ? void 0 : _b[key]) !== variable) {
                    newStructure.display.alias = (_c = oldDisplay === null || oldDisplay === void 0 ? void 0 : oldDisplay.vars_labels) === null || _c === void 0 ? void 0 : _c[key];
                }
            }
        }
        newStructure.data = oldWidget.data;
    }
    return newStructure;
}
exports.convert = convert;
function isOldStructure(widget) {
    var _a, _b, _c;
    const isOld = !!(((_a = widget === null || widget === void 0 ? void 0 : widget.display) === null || _a === void 0 ? void 0 : _a.vars_labels) || ((_b = widget === null || widget === void 0 ? void 0 : widget.display) === null || _b === void 0 ? void 0 : _b.vars_format) || ((_c = widget === null || widget === void 0 ? void 0 : widget.display) === null || _c === void 0 ? void 0 : _c.vars_formula));
    return isOld;
}
exports.isOldStructure = isOldStructure;
//# sourceMappingURL=pushbutton.js.map