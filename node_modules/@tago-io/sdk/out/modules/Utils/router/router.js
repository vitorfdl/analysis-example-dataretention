"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RouterConstructor = void 0;
const service_1 = __importDefault(require("./service"));
class RouterConstructor {
}
exports.RouterConstructor = RouterConstructor;
class AnalysisRouter {
    /**
     * Create an Analysis Router.
     * Use router.register to register new routes for your analysis.
     * Use router.exec() to execute the router and run your functions.
     * Example:
     *      router.register(myFunction).whenInputFormID('create-device-input');
     *      router.exec();
     */
    constructor(params) {
        this.params = params;
        this.services = [];
    }
    register(func) {
        const service = new service_1.default(func);
        this.services.push(service);
        return service;
    }
    /**
     * Start the router. It will pick the service if all conditions are match
     * and send all parameter provided to the final function.
     * @returns json with status and services that run
     */
    async exec() {
        const my_list = [];
        for (const service of this.services) {
            if (!service.verifyConditionsTrue(this.params.scope, this.params.environment)) {
                continue;
            }
            service.runService(this.params);
            my_list.push(service.getServiceName());
        }
        return { status: !!my_list.length, services: my_list };
    }
}
exports.default = AnalysisRouter;
//# sourceMappingURL=router.js.map